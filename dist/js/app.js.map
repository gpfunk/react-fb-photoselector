{"version":3,"sources":["src/js/node_modules/browser-pack/_prelude.js","src/js/node_modules/react-fb-photoselector/dist/msfbphotoselector.js","src/js/src/js/Components/Example.jsx","src/js/src/js/app.jsx"],"names":[],"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","file":"app.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\n * @license MIT\n * @author Michael Scharl <michael.scharl@me.com>\n */\n\n\"use strict\";\n/************************************************************************************************************/\n/*                              Dependency injection and environment detection                              */\n/************************************************************************************************************/\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\n(function (componentFactory, componentName) {\n\n    // CommonJS\n    if ((typeof exports === \"undefined\" ? \"undefined\" : _typeof(exports)) === \"object\" && typeof module !== \"undefined\") {\n        module.exports = componentFactory((typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null));\n    }\n    // RequireJS\n    else if (typeof define === \"function\" && define.amd) {\n            define(['react'], componentFactory);\n        }\n        // <script>\n        else {\n                var g;\n\n                if (typeof window !== \"undefined\") {\n                    g = window;\n                } else if (typeof global !== \"undefined\") {\n                    g = global;\n                } else if (typeof self !== \"undefined\") {\n                    g = self;\n                } else {\n                    return console && console.error && console.error(\"Couldn't detect environment. Please file an Issue at %s with information about your runtime\" + \" environment.\", \"https://github.com/mscharl/react-fb-photoselector/issues\");\n                }\n\n                g[componentName] = componentFactory(g.React);\n            }\n})(function (React) {\n    var ERROR = {\n        CONNECTION_FAILED: {\n            code: -1,\n            message: 'could not connect to fb'\n        },\n        NO_ALBUMS: {\n            code: 1,\n            message: 'could not load albums from user'\n        },\n        NO_PHOTOS: {\n            code: 2,\n            message: 'could not load photos from album'\n        }\n    };\n\n    var MSFBPhotoSelector;\n    return MSFBPhotoSelector = React.createClass({\n        /************************************************************************************************************/\n        /*                                         Core Component Functions                                         */\n        /*                                                                                                          */\n        /* For detailed information see {@link https://facebook.github.io/react/docs/component-specs.html}          */\n        /************************************************************************************************************/\n\n        /**\n         * The displayName string is used in debugging messages\n         */\n        displayName: 'MSFBPhotoSelector',\n\n        /**\n         * The statics object allows you to define static methods that can be called on the component class\n         */\n        statics: {\n\n            /**\n             * All texts inside that photoselector\n             */\n            TEXTS: {\n                your_albums: 'Your Albums',\n                show_more: 'Show more',\n                loading: 'Loadingâ€¦',\n                connection_failed: 'Failed to connect to Facebook.',\n                could_not_load_albums: 'Albums couldn\\'t be loaded.',\n                could_not_load_album_photos: 'Data for this album could not be loaded.',\n                could_not_select_photo: 'Failed to select the photo.',\n                close: 'Close'\n            },\n\n            ERROR: ERROR,\n\n            /**\n             * Number of images to show on initialization\n             */\n            ALBUM_PHOTOS_LIMIT: 6,\n\n            /**\n             * Number of images to add when clicking on \"show more\"\n             */\n            ALBUM_PHOTOS_ROWS_TO_ADD: 3\n        },\n\n        /**\n         * The propTypes object allows you to validate props being passed to your components. For more information about\n         * propTypes, see {@link https://facebook.github.io/react/docs/reusable-components.html Reusable Components}.\n         */\n        propTypes: {\n            closeOnEsc: React.PropTypes.bool,\n            closeOnOutsideClick: React.PropTypes.bool,\n\n            onError: React.PropTypes.func,\n            onCancel: React.PropTypes.func.isRequired,\n            onSelect: React.PropTypes.func.isRequired\n        },\n\n        /**\n         * Invoked once before the component is mounted.\n         * The return value will be used as the initial value of `this.state`.\n         */\n        getInitialState: function getInitialState() {\n            return {\n                FB_user_picture_url: '',\n                FB_albums: [],\n                FB_accessToken: '',\n\n                initializing: true,\n\n                selectedPhoto: 0,\n                selectingPhoto: false,\n\n                showErrorMessage: false,\n                errorMessageLink: '',\n                errorMessage: ''\n            };\n        },\n\n        /**\n         * Invoked once and cached when the class is created.\n         * Values in the mapping will be set on this.props if that prop is not specified by the parent component.\n         * {@link https://facebook.github.io/react/docs/component-specs.html#getdefaultprops}\n         *\n         * @return {{}}\n         */\n        getDefaultProps: function getDefaultProps() {\n            return {\n                closeOnEsc: true,\n                closeOnOutsideClick: true,\n\n                onError: function onError() {\n                    return null;\n                }\n            };\n        },\n\n        /**\n         * Invoked once, only on the client (not on the server), immediately\n         * after the initial rendering occurs. At this point in the lifecycle,\n         * you can access any refs to your children (e.g., to access the\n         * underlying DOM representation). The componentDidMount() method of\n         * child components is invoked before that of parent components.\n         */\n        componentDidMount: function componentDidMount() {\n            var _this = this;\n\n            _this._manageGlobalEventHandlers(_this.props);\n\n            _this._FB_init(function () {\n                _this.setState({\n                    initializing: false\n                });\n            });\n        },\n\n        /**\n         * Invoked immediately before a component is unmounted from the DOM.\n         *\n         * Perform any necessary cleanup in this method,\n         * such as invalidating timers or cleaning up any DOM elements that\n         * were created in componentDidMount.\n         */\n        componentWillUnmount: function componentWillUnmount() {\n            this._manageGlobalEventHandlers({}, true);\n        },\n        componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n            this._manageGlobalEventHandlers(nextProps);\n        },\n\n        /************************************************************************************************************/\n        /*                                        Component Functions                                               */\n        /************************************************************************************************************/\n\n        /**\n         * Add or forceRemove event listeners depending on the given props\n         *\n         * @param props\n         * @param forceRemove\n         * @private\n         */\n        _manageGlobalEventHandlers: function _manageGlobalEventHandlers(props, forceRemove) {\n            var _this = this;\n\n            if (!forceRemove && props.closeOnEsc) {\n                document.addEventListener('keyup', _this.onKeyup_document);\n            } else {\n                document.removeEventListener('keyup', _this.onKeyup_document);\n            }\n\n            if (!forceRemove && props.closeOnOutsideClick) {\n                document.addEventListener('click', _this.onClick_document);\n            } else {\n                document.removeEventListener('click', _this.onClick_document);\n            }\n        },\n\n        /************************************************************************************************************/\n        /*                                        FB-Communication Functions                                        */\n        /************************************************************************************************************/\n\n        /**\n         * Function to initialize the components FB-Connection\n         * @private\n         */\n        _FB_init: function _FB_init(finishedCallback) {\n            var _this = this;\n\n            //Fail if FB is not available\n            if (typeof FB === 'undefined') {\n                throw new Error('FB-SDK was not found!');\n            }\n\n            //Get the users AccessToken\n            FB.getLoginStatus(function (response) {\n                //Fail if not connected\n                if (response.status != 'connected') {\n                    _this.props.onError(ERROR.CONNECTION_FAILED);\n                    _this.set_errorMessage(MSFBPhotoSelector.TEXTS.connection_failed);\n                }\n\n                //Load data when connected\n                else {\n                        _this.setState({\n                            FB_accessToken: response.authResponse.accessToken\n                        });\n\n                        _this._FB_getUserAlbums(finishedCallback);\n                        _this._FB_getUserImage();\n                    }\n            }, true);\n        },\n\n        /**\n         * Load the user image\n         * @private\n         */\n        _FB_getUserImage: function _FB_getUserImage() {\n            var _this = this;\n\n            _this._FB_API('/me/picture', function (response) {\n                _this.setState({\n                    FB_user_picture: response.data.url\n                });\n            });\n        },\n\n        /**\n         * Get all albums from the logged in user\n         *\n         * @param finishedCallback\n         * @private\n         */\n        _FB_getUserAlbums: function _FB_getUserAlbums(finishedCallback) {\n            var _this = this;\n\n            _this._FB_API('/me/albums', { fields: 'name,id' }, function (response) {\n                if (!response || response.error) {\n                    _this.props.onError(ERROR.NO_ALBUMS);\n                    _this.set_errorMessage(MSFBPhotoSelector.TEXTS.could_not_load_albums);\n                } else {\n                    _this.setState({\n                        FB_albums: response.data.map(function (album) {\n                            var album = {\n                                id: album.id,\n                                name: album.name,\n                                loading: false,\n                                limit: MSFBPhotoSelector.ALBUM_PHOTOS_LIMIT,\n                                photos: []\n                            };\n\n                            _this._FB_getAlbumPhotos(album);\n\n                            return album;\n                        })\n                    }, finishedCallback);\n                }\n            });\n        },\n\n        /**\n         * Get photos from a given album\n         *\n         * @param album\n         * @private\n         */\n        _FB_getAlbumPhotos: function _FB_getAlbumPhotos(album) {\n            var _this = this;\n\n            _this._FB_API(\"/\" + album.id + \"/photos\", { fields: 'id', limit: 999999 }, function (response) {\n                if (!response || response.error) {\n                    _this.props.onError(ERROR.NO_PHOTOS);\n                    _this.set_errorMessage(MSFBPhotoSelector.TEXTS.could_not_load_album_photos, 'https://facebook.com/' + album.id);\n                } else {\n                    var index = _this.state.FB_albums.indexOf(album);\n                    var FB_albums = _this.state.FB_albums.slice(0);\n\n                    FB_albums[index].photos = response.data.map(function (photo) {\n                        return { id: photo.id };\n                    });\n                    _this.setState({ FB_albums: FB_albums });\n                }\n            });\n        },\n\n        /**\n         * Get the data for a given photo by id\n         *\n         * @param photoId\n         * @param callback\n         * @private\n         */\n        _FB_getPhoto: function _FB_getPhoto(photoId, callback) {\n            var _this = this;\n\n            _this._FB_API('/' + photoId + '/picture', callback);\n        },\n\n        /**\n         * Wrapper for the FB.api function to avoid unwanted errors\n         *\n         * @param p1\n         * @param p2\n         * @param p3\n         * @private\n         */\n        _FB_API: function _FB_API(p1, p2, p3) {\n            if (typeof FB === 'undefined') {\n                throw new Error('FB-SDK was not found!');\n            }\n\n            FB.api(p1, p2, p3);\n        },\n\n        /************************************************************************************************************/\n        /*                                         Event Handling Functions                                         */\n        /************************************************************************************************************/\n\n        /**\n         * Handle keyup event onto document\n         * Close component when `ESC` was pressed\n         *\n         * @param event\n         */\n        onKeyup_document: function onKeyup_document(event) {\n            if (event.keyCode == 27) {\n                this.onClick_cancel();\n            }\n        },\n\n        /**\n         * Handle click onto document\n         * Close Component if default is not prevented\n         *\n         * @param event\n         */\n        onClick_document: function onClick_document(event) {\n            if (event.defaultPrevented) {\n                return;\n            }\n\n            this.onClick_cancel();\n        },\n\n        /**\n         * Handle when the user clicks \"close\"\n         */\n        onClick_cancel: function onClick_cancel() {\n            this.props.onCancel();\n        },\n\n        /**\n         * Handle when the user selects an image\n         *\n         * @param photo\n         */\n        onClick_photo: function onClick_photo(photo) {\n            var _this = this;\n\n            //Set the state to selecting\n            _this.setState({\n                selectedPhoto: photo.id,\n                selectingPhoto: true\n            },\n            //After setting the state load the photo data\n            function () {\n                return _this._FB_getPhoto(photo.id, function (response) {\n                    _this.props.onSelect({\n                        id: photo.id,\n                        url: response.data.url\n                    });\n                });\n            });\n        },\n\n        /**\n         * Handle when the user wants to see more photos of an album\n         *\n         * @param album\n         */\n        onClick_showMorePhotos: function onClick_showMorePhotos(album) {\n            var _this = this,\n                FB_albums = _this.state.FB_albums.slice(),\n                index = FB_albums.indexOf(album);\n\n            //Increase the limit\n            FB_albums[index].limit += MSFBPhotoSelector.ALBUM_PHOTOS_LIMIT * MSFBPhotoSelector.ALBUM_PHOTOS_ROWS_TO_ADD;\n\n            _this.setState({ FB_albums: FB_albums });\n        },\n\n        /**\n         * Display an error message\n         *\n         * @param errorMessage\n         * @param [errorMessageLink]\n         * @param [timeToShow]\n         */\n        set_errorMessage: function set_errorMessage(errorMessage, errorMessageLink, timeToShow) {\n            var _this = this;\n\n            _this.setState({\n                showErrorMessage: typeof link === 'undefined' ? 1 : 2,\n                errorMessage: errorMessage,\n                errorMessageLink: errorMessageLink\n            }, function () {\n                return setTimeout(function () {\n                    return _this.setState({\n                        showErrorMessage: false,\n                        errorMessage: '',\n                        errorMessageLink: ''\n                    });\n                }, timeToShow || 4000);\n            });\n        },\n\n        /************************************************************************************************************/\n        /*                                        Render this awesome stuff                                         */\n        /************************************************************************************************************/\n        render: function render() {\n            return this.renderPart_popup();\n        },\n        renderPart_popup: function renderPart_popup() {\n            var _this = this;\n\n            return React.createElement(\n                \"div\",\n                { className: \"ms-fbphotoselector__popup\" },\n                React.createElement(\n                    \"div\",\n                    { className: \"ms-fbphotoselector\" },\n                    _this.renderPart_header(),\n                    React.createElement(\n                        \"div\",\n                        { className: \"ms-fbphotoselector__content\" },\n                        _this.renderPart_error(),\n                        _this.state.initializing ? _this.renderPath_loading() : _this.renderPart_albums()\n                    ),\n                    _this.renderPart_footer(),\n                    _this.state.selectingPhoto ? React.createElement(\"div\", { className: \"ms-fbphotoselector__content__overlay\" }) : null\n                )\n            );\n        },\n        renderPart_header: function renderPart_header() {\n            var _this = this;\n\n            return React.createElement(\n                \"div\",\n                { className: \"ms-fbphotoselector__header\" },\n                !!_this.state.FB_user_picture_url ? React.createElement(\"img\", { src: _this.state.user_picture,\n                    className: \"ms-fbphotoselector__header__user-image\" }) : null,\n                React.createElement(\"i\", { className: \"ms-fbphotoselector__header__icon\" }),\n                MSFBPhotoSelector.TEXTS.your_albums\n            );\n        },\n        renderPart_footer: function renderPart_footer() {\n            var _this = this;\n\n            return React.createElement(\n                \"div\",\n                { className: \"ms-fbphotoselector__footer\" },\n                React.createElement(\n                    \"a\",\n                    { onClick: _this.onClick_cancel },\n                    MSFBPhotoSelector.TEXTS.close\n                )\n            );\n        },\n        renderPath_loading: function renderPath_loading() {\n            return React.createElement(\n                \"div\",\n                { className: \"ms-fbphotoselector__loader\" },\n                MSFBPhotoSelector.TEXTS.loading\n            );\n        },\n        renderPart_albums: function renderPart_albums() {\n            var _this = this,\n                albums = _this.state.FB_albums.filter(function (album) {\n                return !!album.photos.length;\n            });\n\n            return React.createElement(\n                \"ul\",\n                { className: \"ms-fbphotoselector__albums\" },\n                albums.map(function (album) {\n                    return React.createElement(\n                        \"li\",\n                        { key: album.id, className: \"ms-fbphotoselector__albums__item\" },\n                        React.createElement(\n                            \"h3\",\n                            { className: \"ms-fbphotoselector__albums__item-name\" },\n                            album.name\n                        ),\n                        React.createElement(\n                            \"ul\",\n                            { className: \"ms-fbphotoselector__albums__photos\" },\n                            album.photos.slice(0, album.limit).map(_this.renderPart_photo)\n                        ),\n                        album.limit < album.photos.length ? React.createElement(\n                            \"button\",\n                            { className: \"ms-fbphotoselector__albums__item-more\",\n                                onClick: function onClick() {\n                                    return _this.onClick_showMorePhotos(album);\n                                } },\n                            MSFBPhotoSelector.TEXTS.show_more\n                        ) : null\n                    );\n                })\n            );\n        },\n        renderPart_photo: function renderPart_photo(photo) {\n            var _this = this;\n            var styles = {\n                backgroundImage: \"url('https://graph.facebook.com/\" + photo.id + \"/picture?type=album&access_token=\" + _this.state.FB_accessToken + \"')\"\n            },\n                classes = [\"ms-fbphotoselector__albums__photos-image__image\", _this.state.selectedPhoto == photo.id && \"ms-fbphotoselector__albums__photos-image__image--selected\"];\n\n            return React.createElement(\n                \"li\",\n                { key: photo.id, className: \"ms-fbphotoselector__albums__photos-image\" },\n                React.createElement(\"div\", { className: classes.join(' '), onClick: function onClick() {\n                        return _this.onClick_photo(photo);\n                    }, style: styles })\n            );\n        },\n        renderPart_error: function renderPart_error() {\n            var _this = this;\n\n            var classes = [\"ms-fbphotoselector__error\", _this.state.showErrorMessage && \"ms-fbphotoselector__error--visible\"];\n\n            return _this.state.showErrorMessage ? React.createElement(\n                \"div\",\n                { className: classes.join(' ') },\n                React.createElement(\"span\", { className: \"ms-fbphotoselector__error__icon\" }),\n                _this.state.showErrorMessage != 2 ? React.createElement(\n                    \"span\",\n                    { className: \"ms-fbphotoselector__error__text\" },\n                    _this.state.errorMessage\n                ) : React.createElement(\n                    \"a\",\n                    { href: _this.state.errorMessageLink, target: \"_blank\",\n                        className: \"ms-fbphotoselector__error__text\" },\n                    _this.state.errorMessage\n                )\n            ) : null;\n        }\n    });\n}, 'MSFBPhotoSelector');","const\n    React = require('react'),\n    Photoselector = require('react-fb-photoselector');\n\nmodule.exports = React.createClass({\n\n\n    /************************************************************************************************************/\n    /*                                         Core Component Functions                                         */\n    /*                                                                                                          */\n    /* For detailed information see {@link https://facebook.github.io/react/docs/component-specs.html}          */\n    /************************************************************************************************************/\n\n    /**\n     * The displayName string is used in debugging messages\n     */\n    displayName: 'Example',\n\n    /**\n     * The statics object allows you to define static methods that can be called on the component class\n     */\n    statics: {},\n\n    /**\n     * The propTypes object allows you to validate props being passed to your components. For more information about\n     * propTypes, see {@link https://facebook.github.io/react/docs/reusable-components.html Reusable Components}.\n     */\n    propTypes: {},\n\n    /**\n     * Invoked once before the component is mounted.\n     * The return value will be used as the initial value of `this.state`.\n     */\n    getInitialState: function() {\n        return {\n            selectFacebookImage: false,\n            fbIsAvailable: false,\n            connectionError: false,\n            facebookImageUrl: ''\n        };\n    },\n\n    /**\n     * Invoked once and cached when the class is created.\n     * Values in the mapping will be set on this.props if that prop is not specified by the parent component.\n     * {@link https://facebook.github.io/react/docs/component-specs.html#getdefaultprops}\n     *\n     * @return {{}}\n     */\n    getDefaultProps: function() {\n        return {}\n    },\n\n    /**\n     * Invoked when a component is receiving new props.\n     * This method is not called for the initial render.\n     */\n    componentWillReceiveProps: function(nextProps) {\n\n    },\n\n    componentDidMount() {\n        const _this = this;\n\n        function checkFB() {\n            if(typeof FB !== 'undefined') {\n                _this.setState({fbIsAvailable: true});\n            }\n\n            _this.checkForFacebookTimeout = setTimeout(checkFB, 50);\n        }\n\n        checkFB();\n    },\n\n    componentWillUnmount() {\n        clearTimeout(this.checkForFacebookTimeout);\n    },\n\n    /************************************************************************************************************/\n    /*                                        Custom Component Functions                                        */\n    /************************************************************************************************************/\n\n    checkForFacebookTimeout: 0,\n\n    onClick_facebookConnect() {\n        const _this = this;\n\n        FB.login(function(response) {\n            if(response && response.authResponse) {\n                _this.setState({\n                    connectionError: false,\n                    selectFacebookImage: true\n                });\n            }\n            else {\n                _this.setState({\n                    connectionError: true\n                });\n            }\n        }, {scope: 'user_photos'});\n    },\n\n    photoselect_onCancel() {\n        this.setState({\n            selectFacebookImage: false\n        });\n    },\n    photoselect_onSelect(data) {\n        this.setState({\n            selectFacebookImage: false,\n            facebookImageUrl: data.url\n        });\n    },\n\n\n    /************************************************************************************************************/\n    /*                                        Render this awesome stuff                                         */\n    /************************************************************************************************************/\n    render() {\n        const _this = this;\n\n        return (\n            <div>\n                {_this.state.connectionError ? (\n                    <div className=\"alert alert-warning\" role=\"alert\">\n                        <strong>Not Connected!</strong> You need to connect with Facebook in order to use this dialog.\n                    </div>\n                ) : null}\n                {!_this.state.facebookImageUrl ? (\n                    <div className=\"row\">\n                        <div className=\"col-sm-6 col-sm-offset-3 col-md-4 col-md-offset-4\">\n                            <button className=\"app-example__connect btn btn-block btn-facebook\"\n                                    onClick={_this.onClick_facebookConnect} disabled={!_this.state.fbIsAvailable}>\n                                {_this.state.fbIsAvailable ? (\n                                    <span>\n                                        <i className=\"fa fa-facebook-official\"></i> Connect with Facebook\n                                    </span>) : (\n                                    <span>\n                                        <i className=\"fa fa-fw fa-spin fa-spinner\"></i>\n                                        Waiting for Facebook\n                                    </span>\n                                )}\n                            </button>\n                        </div>\n                    </div>\n                ) : (\n                    <div className=\"row\">\n                        <div className=\"col-sm-4 col-sm-offset-1\">\n                            <div className=\"form-group\">\n                                <button className=\"app-example__connect btn btn-block btn-primary\"\n                                        onClick={_this.onClick_facebookConnect} disabled={!_this.state.fbIsAvailable}>\n                                    Select another\n                                </button>\n                            </div>\n                        </div>\n                        <div className=\"col-sm-6\">\n                            <div className=\"app-example__image__wrapper\">\n                                <img src={_this.state.facebookImageUrl} alt=\"Your selected image\"\n                                     className=\"app-example__image img-fluid\"/>\n                            </div>\n                        </div>\n                    </div>\n                )}\n                {_this.state.selectFacebookImage ?\n                    <Photoselector onSelect={_this.photoselect_onSelect} onCancel={_this.photoselect_onCancel}/> : null}\n            </div>\n        );\n    }\n});\n","const\n    React = require('react'),\n    ReactDOM = require('react-dom'),\n    Example = require('./Components/Example.jsx')/*,\n    Usage = require('./Components/Usage.jsx')*/;\n\nReactDOM.render(<Example />, document.getElementById('example'));\n//ReactDOM.render(<Usage />, document.getElementById('usage'));\n"]}